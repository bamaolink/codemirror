import { langs as chinese } from './langs/chinese';
import { Compartment } from '@codemirror/state';
import { angular } from '@codemirror/lang-angular';
import { cpp } from '@codemirror/lang-cpp';
import { css } from '@codemirror/lang-css';
import { go } from '@codemirror/lang-go';
import { java } from '@codemirror/lang-java';
import { javascript } from '@codemirror/lang-javascript';
import { jinja } from '@codemirror/lang-jinja';
import { json } from '@codemirror/lang-json';
import { liquid } from '@codemirror/lang-liquid';
import { markdown } from '@codemirror/lang-markdown';
import { html } from '@codemirror/lang-html';
import { php } from '@codemirror/lang-php';
import { python } from '@codemirror/lang-python';
import { rust } from '@codemirror/lang-rust';
import { sass } from '@codemirror/lang-sass';
import { sql } from '@codemirror/lang-sql';
import { vue } from '@codemirror/lang-vue';
import { wast } from '@codemirror/lang-wast';
import { xml } from '@codemirror/lang-xml';
import { yaml } from '@codemirror/lang-yaml';
export { chinese };
export { themeStyles } from './basic/theme';
export { basicSetup, minimalSetup, EditorView } from './basic';
export declare const languageConf: Compartment;
export declare const editableConf: Compartment;
export declare const themeConf: Compartment;
export declare const themeStyleConf: Compartment;
export declare const lineWrappingConf: Compartment;
export declare const langs: {
    javascript: typeof javascript;
    markdown: typeof markdown;
    json: typeof json;
    css: typeof css;
    sass: typeof sass;
    html: typeof html;
    angular: typeof angular;
    cpp: typeof cpp;
    go: typeof go;
    java: typeof java;
    vue: typeof vue;
    jinja: typeof jinja;
    liquid: typeof liquid;
    php: typeof php;
    python: typeof python;
    rust: typeof rust;
    sql: typeof sql;
    wast: typeof wast;
    xml: typeof xml;
    yaml: typeof yaml;
};
export type LangModelType = keyof typeof langs;
export type ThemeType = 'dark' | 'light' | 'system';
export declare const getLangModel: (lang: LangModelType) => import("@codemirror/language").LanguageSupport;
export declare const getTheme: (theme: ThemeType) => import("@codemirror/state").Extension;
export { capitalizeFirstLetter, copyToClipboard } from './utils';
